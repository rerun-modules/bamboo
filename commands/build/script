#!/usr/bin/env bash

# To implement this command, edit the "Command implementation" section below. 

# Usage
# -----

# Comments prefixed with `#/` are managed by stubbs.
# The `command` and `usage` comments describe the command
# and show its options.
# 
#/ command: bamboo:build: "build and package the Bamboo distribution"
#/ usage: rerun bamboo:build [ --package-format <rpm>] [ --package-release <1>] [ --format <tgz>] [ --url <http://wpc.29c4.edgecastcdn.net/8029C4/downloads/software/bamboo/downloads>]  --version <>  --directory <> 

# Load common functions
# ---------------------

# Load the function library for this module.
# This loads rerun functions, too.
. $RERUN_MODULE_DIR/lib/functions.sh build || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Error handling
# ---------------

# This script is designed to _fail-fast_.

# Trap errors and exit. The call to `rerun_die` will print the
# the error message and exit with the error command exit status. 

trap 'rerun_die $? "*** command failed: bamboo:build. ***"' ERR

# Run [set] `nounset` to treat unset variables as errors. Set [pipefail]
# so a pipeline return status is the value of the last 
# (rightmost) command to exit with non-zero status.
#
# [set]: http://ss64.com/bash/set.html
# [pipefail]: http://www.gnu.org/software/bash/manual/html_node/Pipelines.html

set -o nounset -o pipefail

# Command variables
# -----------------

# This command script can access the following variables
# declared by `rerun` or by the option parser function.

#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: PACKAGE_FORMAT PACKAGE_RELEASE FORMAT URL VERSION DIRECTORY

# The `rerun_options_parse` function processes the command line
# arguments. Each accepted command line flag results in setting 
# one the corresponding option variables.

rerun_options_parse "$@"


# Command implementation
# ----------------------




bambooDist="atlassian-bamboo-${VERSION}.${FORMAT}"
bambooUrl="${URL}/${bambooDist}"


buildrpm() {
  if [[ ! -e "$DIRECTORY/SOURCES/${bambooDist}" ]]
  then
    # Download the specified version from the downloads site:
    # e.g. http://wpc.29c4.edgecastcdn.net/8029C4/downloads/software/bamboo/downloads/atlassian-bamboo-4.3.3.tgz

    mkdir -p $DIRECTORY/SOURCES
    curl -f -skL -o "$DIRECTORY/SOURCES/${bambooDist}" "${bambooUrl}" || rerun_die "Unable to download artifact: ${bambooUrl}"
  fi


   rerun rpm:build -n atlassian-bamboo -v $VERSION -r $PACKAGE_RELEASE -t $DIRECTORY
}


case $PACKAGE_FORMAT in
  rpm)
    buildrpm
    ;;
  *)
    rerun_die "invalid package format \"$PACKAGE_FORMAT\""
    ;;
esac


# Done. Exit with last command exit status.
exit $?

