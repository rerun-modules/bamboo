#!/usr/bin/env bash

# To implement this command, edit the "Command implementation" section below. 

# Usage
# -----

# Comments prefixed with `#/` are managed by stubbs.
# The `command` and `usage` comments describe the command
# and show its options.
# 
#/ command: bamboo:setup: "Bamboo first time setup"
#/ usage: rerun bamboo:setup [ --bamboo-user <bamboo>] [ --bamboo-password <admin123>] 

# Load common functions
# ---------------------

# Load the function library for this module.
# This loads rerun functions, too.
. $RERUN_MODULE_DIR/lib/functions.sh setup || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Error handling
# ---------------

# This script is designed to _fail-fast_.

# Trap errors and exit. The call to `rerun_die` will print the
# the error message and exit with the error command exit status. 

trap 'rerun_die $? "*** command failed: bamboo:setup. ***"' ERR

# Run [set] `nounset` to treat unset variables as errors. Set [pipefail]
# so a pipeline return status is the value of the last 
# (rightmost) command to exit with non-zero status.
#
# [set]: http://ss64.com/bash/set.html
# [pipefail]: http://www.gnu.org/software/bash/manual/html_node/Pipelines.html

set -o nounset -o pipefail

# Command variables
# -----------------

# This command script can access the following variables
# declared by `rerun` or by the option parser function.

#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: BAMBOO_USER BAMBOO_PASSWORD

# The `rerun_options_parse` function processes the command line
# arguments. Each accepted command line flag results in setting 
# one the corresponding option variables.

rerun_options_parse "$@"


# Command implementation
# ----------------------

#BAMBOO_URL

COOKIE_TMP=$(mktemp)

setupDefaults() {
   curl -s -f -o /dev/null -c ${COOKIE_TMP} -b  ${COOKIE_TMP} ${BAMBOO_URL}/setup/setupDefaultGeneral.action &&
   timeout 180 grep -q '^.*INFO.*SetupDefaultsAction.* Database setup complete.*$' <(tail -n 0 -f $BAMBOO_LOG)
}

setupAdminUser() {
   curl -s -o /dev/null  -c  ${COOKIE_TMP} -b  ${COOKIE_TMP} -f -d "username=${BAMBOO_USER}" -d "password=${BAMBOO_PASSWORD}" -d "confirmPassword=${BAMBOO_PASSWORD}" -d 'fullName=mrbamboo' -d 'email=foo@devnull.com' ${BAMBOO_URL}/setup/performSetupAdminUser.action
}

finishSetup() {
   curl -s -o /dev/null -c  ${COOKIE_TMP} -b  ${COOKIE_TMP} -f ${BAMBOO_URL}/setup/finishsetup.action &&
   timeout 180 grep -q '^.*INFO .*FinishSetupAction.* Bamboo Setup Complete.*$' <(tail -n 0 -f $BAMBOO_LOG)
}


if curl -o /dev/null -s -f -u "${BAMBOO_USER}:${BAMBOO_PASSWORD}" "${BAMBOO_URL}"
then
   exit 0
else
   :
fi

echo setupDefaults
setupDefaults || rerun_die "bamboo defaults setup failed" 

echo setupAdminUser
setupAdminUser || rerun_die "bamboo admin user setup failed"

echo finishSetup
finishSetup || rerun_die "bamboo finish setup failed"

# Done. Exit with last command exit status.
exit $?

