#!/usr/bin/env bash

# To implement this command, edit the "Command implementation" section below. 

# Usage
# -----

# Comments prefixed with `#/` are managed by stubbs.
# The `command` and `usage` comments describe the command
# and show its options.
# 
#/ command: bamboo:start: "Start the Bamboo server"
#/ usage: rerun bamboo:start [ --start-timeout <360>] 

# Load common functions
# ---------------------

# Load the function library for this module.
# This loads rerun functions, too.
. $RERUN_MODULE_DIR/lib/functions.sh start || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Error handling
# ---------------

# This script is designed to _fail-fast_.

# Trap errors and exit. The call to `rerun_die` will print the
# the error message and exit with the error command exit status. 

trap 'rerun_die $? "*** command failed: bamboo:start. ***"' ERR

# Run [set] `nounset` to treat unset variables as errors. Set [pipefail]
# so a pipeline return status is the value of the last 
# (rightmost) command to exit with non-zero status.
#
# [set]: http://ss64.com/bash/set.html
# [pipefail]: http://www.gnu.org/software/bash/manual/html_node/Pipelines.html

set -o nounset -o pipefail

# Command variables
# -----------------

# This command script can access the following variables
# declared by `rerun` or by the option parser function.

#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: START_TIMEOUT

# The `rerun_options_parse` function processes the command line
# arguments. Each accepted command line flag results in setting 
# one the corresponding option variables.

rerun_options_parse "$@"


COUNT=${START_TIMEOUT}
INTERVAL=1

# Command implementation
# ----------------------

if [ -f $RERUN_MODULE_DIR/options/version/metadata ]
then
   source $RERUN_MODULE_DIR/options/version/metadata
fi

if ! rerun bamboo:status
then
  #
  # Start Bamboo:
  #
  sudo /sbin/service bamboo start


  if [ -n "${BAMBOO_LOG}" ]
  then

      #
      # Wait for the log file to exist:
      #
      count=0
      while [[ $count -lt $COUNT ]]
      do
         if sudo test -e $BAMBOO_LOG
         then
            break
         fi

         sleep $INTERVAL
         count=$((count+1))
      done

      if [[ $count -eq $COUNT ]]
      then
         exit 1
      fi

      #
      # Wait for the startup message to appear or timeout:
      #
      timeout $((INTERVAL*COUNT)) grep -q '^.*INFO:oejs.AbstractConnector:Started SelectChannelConnector@.*$' <(sudo tail -n 0 -f $BAMBOO_LOG)

   fi
fi


   

# Done. Exit with last command exit status.
exit $?

